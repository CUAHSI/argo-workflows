apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  annotations:
    cuahsi/description: This workflow collects analysis of record for calibration
      (AORC v1.1) meteorological forcing data for a specified time period and spatial
      extent. These data are obtained from public archive of the 'noaa-nwm-retrospective-3-0-pds'
      bucket hosted on AWS.
    cuahsi/longname: Collect AORC V1.1
    cuahsi/version: "0.1"
  labels:
    argocd.argoproj.io/instance: workflows-sync
  name: collect-aorc-forcing-v1.1
  namespace: workflows
spec:
  arguments:
    parameters:
    - description: Start of date range for which to collect data, in the format YYYY-MM-DD
      name: start-date
      value: "2020-01-01"
    - description: End of date range for which to collect data, in the format YYYY-MM-DD
      name: end-date
      value: "2020-01-10"
    - description: Name of the cloud bucket where the collected forcing data will
        be saved.
      name: output_bucket
      value: acastronova
    - description: Name of the cloud bucket where input data are located.
      name: input_bucket
      value: acastronova
    - description: Relative path within the 'output_bucket' to save the collected
        forcing data.
      name: output_path
      value: wb-2853612/forcing
    - description: Relative path within the 'input_bucket' to a Shapefile that defines
        the spatial extent for which to collect forcing data.
      name: shape-file-path
      value: wb-2853612/domain/watershed.gz
  entrypoint: collect-aorc
  templateDefaults:
    inputs: {}
    metadata: {}
    outputs: {}
    retryStrategy:
      limit: "0"
    timeout: 600s
  templates:
  - container:
      args:
      - '{{inputs.parameters.start-date}}'
      - '{{inputs.parameters.end-date}}'
      - /input/watershed.shp
      - s3://noaa-nwm-retrospective-3-0-pds
      - /output/forcing.nc
      command:
      - python
      - -u
      - entry.py
      image: cuahsi/aorc-v1.1:20240520
      name: ""
      ports:
      - containerPort: 8787
      resources:
        requests:
          cpu: "2"
          ephemeral-storage: 10Gi
          memory: 16Gi
    inputs:
      artifacts:
      - name: shapefile-input
        path: /input
        s3:
          accessKeySecret:
            key: accessKey
            name: minio-credentials
          bucket: '{{inputs.parameters.input-bucket}}'
          endpoint: api.minio.cuahsi.io
          key: '{{inputs.parameters.shape-file-path}}'
          secretKeySecret:
            key: secretKey
            name: minio-credentials
      parameters:
      - name: shape-file-path
        value: '{{workflow.parameters.shape-file-path}}'
      - name: output-bucket
        value: '{{workflow.parameters.output_bucket}}'
      - name: input-bucket
        value: '{{workflow.parameters.input_bucket}}'
      - name: output-path
        value: '{{workflow.parameters.output_path}}'
      - name: start-date
        value: '{{workflow.parameters.start-date}}'
      - name: end-date
        value: '{{workflow.parameters.end-date}}'
    metadata: {}
    name: collect-aorc
    outputs:
      artifacts:
      - archive:
          none: {}
        name: aorc-output-artifact
        path: /output
        s3:
          accessKeySecret:
            key: accessKey
            name: minio-credentials
          bucket: '{{inputs.parameters.output-bucket}}'
          endpoint: api.minio.cuahsi.io
          key: '{{inputs.parameters.output-path}}'
          secretKeySecret:
            key: secretKey
            name: minio-credentials
